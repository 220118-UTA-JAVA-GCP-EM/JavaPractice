1. Create an abstract class called Customer with:
	- Four properties, name, balance, cart (String), cartCost

	- An all-args constructor used for constructor chaining

	- A public method called addToCart which takes a item as a string, and a cost
	  as an int, and adds the item to the cart and cost to the cartCost, returns the
	  updated cart

	- A public abstract method called buy

2. Create an interface called Premium with:
	- A String property title set to the title of the user (title can be whatever you like)

	- An int method called discountPrice which takes in an int

3. Create a class called PremiumCustomer that:
	- extends Customer, and implements Premium

	- has private properties vipCard which is their card number, an integer years
	  which keeps track of the number of years they have been vip

	- The PremiumCustomer should have a no-args constructor, and an all args
	  constructor that allows you to set the properties of the Customer class,
	  and the properties of the PremiumCustomer, HINT (think about the super() keyword)

	- implement the discountPrice methods so that the premium user gets a discount
	  of 15% on all items in their cart, and sets the balance property

    - implement the buy method, which should remove the items from the cart, and reset the balance property

	- implement the getters and setters for the premium user

	- Override the toString method from the object class to include all properties from the
	  Abstract class, interface, and Concrete class

4. Activity 7 will be creating tests for this activity